/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pagesOpcoes;

import ModelTableCores.CorNaLinhaParcelas;
import java.awt.Toolkit;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;

/**
 *
 * @author hugogabriel
 */
public class Parcelas extends javax.swing.JFrame {

    /**
     * Creates new form Parcelas
     */
    public Parcelas() {
        initComponents();
        setIcon();
        formatarCamposDecimais();

        tableParcelas.setDefaultRenderer(Object.class, new CorNaLinhaParcelas());
    }

    public void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/src/mark 2.7.png")));
    }

    public void formatarCamposDecimais() {
        DecimalFormatSymbols symbols = DecimalFormatSymbols.getInstance();
        symbols.setGroupingSeparator(' '); // Define o separador de milhares como aspas simples

        DecimalFormat decimal = new DecimalFormat("#,##0.00");
        decimal.setDecimalFormatSymbols(symbols);

        NumberFormatter numFormatter = new NumberFormatter(decimal);
        numFormatter.setFormat(decimal);
        numFormatter.setAllowsInvalid(false);

        DefaultFormatterFactory dfFactory = new DefaultFormatterFactory(numFormatter);
        precoParcelas.setFormatterFactory(dfFactory);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableParcelas = new javax.swing.JTable();
        precoParcelas = new loginAnimation.textformated();
        jButton1 = new javax.swing.JButton();
        BTvisa = new javax.swing.JToggleButton();
        BTmaster = new javax.swing.JToggleButton();
        BThiper = new javax.swing.JToggleButton();
        BTelo = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Simulador de parcelas");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("<html>VALOR QUE</html>");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel2.setFont(new java.awt.Font("Century Gothic", 3, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("R$");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 3, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("<html>PRETENDE RECEBER</html>");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tableParcelas.setFont(new java.awt.Font("Century Gothic", 3, 14)); // NOI18N
        tableParcelas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "PARCELAS CLIENTES", "VALOR A SER COBRADO"
            }
        ));
        jScrollPane1.setViewportView(tableParcelas);

        precoParcelas.setBackground(new java.awt.Color(255, 255, 255));
        precoParcelas.setForeground(new java.awt.Color(153, 153, 153));
        precoParcelas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        precoParcelas.setText("100,00");
        precoParcelas.setFont(new java.awt.Font("Century Gothic", 3, 24)); // NOI18N
        precoParcelas.setLabelText("");
        precoParcelas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                precoParcelasKeyReleased(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/TELAP_OPCOES.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setOpaque(true);

        BTvisa.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(BTvisa);
        BTvisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/visa.png"))); // NOI18N
        BTvisa.setSelected(true);
        BTvisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTvisaActionPerformed(evt);
            }
        });

        BTmaster.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(BTmaster);
        BTmaster.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/master.png"))); // NOI18N
        BTmaster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTmasterActionPerformed(evt);
            }
        });

        BThiper.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(BThiper);
        BThiper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/hiper.png"))); // NOI18N
        BThiper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BThiperActionPerformed(evt);
            }
        });

        BTelo.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(BTelo);
        BTelo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/elo.png"))); // NOI18N
        BTelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTeloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(precoParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BTvisa, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(BTmaster, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(BThiper, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(BTelo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTvisa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTmaster, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BThiper, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTelo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(precoParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void precoParcelasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precoParcelasKeyReleased
        // TODO add your handling code here:
        if (BTvisa.isSelected() || BTmaster.isSelected()) {
            String valorString = precoParcelas.getText().replace(",", ".").replaceAll(" ", "");
            try {
                double valor = Double.parseDouble(valorString);
                DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");

                for (int i = 0; i < 18; i++) {
                    int parcela = i + 1;
                    double porcentagem = 0.0;

                    if (parcela == 1) {
                        porcentagem = 2.99;
                    } else if (parcela == 2) {
                        porcentagem = 4.52;
                    } else if (parcela == 3) {
                        porcentagem = 5.37;
                    } else if (parcela == 4) {
                        porcentagem = 6.22;
                    } else if (parcela == 5) {
                        porcentagem = 7.06;
                    } else if (parcela == 6) {
                        porcentagem = 7.92;
                    } else if (parcela == 7) {
                        porcentagem = 8.24;
                    } else if (parcela == 8) {
                        porcentagem = 8.96;
                    } else if (parcela == 9) {
                        porcentagem = 9.68;
                    } else if (parcela == 10) {
                        porcentagem = 10.39;
                    } else if (parcela == 11) {
                        porcentagem = 11.09;
                    } else if (parcela == 12) {
                        porcentagem = 11.78;
                    } else if (parcela == 13) {
                        porcentagem = 13.26;
                    } else if (parcela == 14) {
                        porcentagem = 13.94;
                    } else if (parcela == 15) {
                        porcentagem = 14.61;
                    } else if (parcela == 16) {
                        porcentagem = 15.28;
                    } else if (parcela == 17) {
                        porcentagem = 15.94;
                    } else if (parcela == 18) {
                        porcentagem = 16.59;
                    }

                    double valorParcelado = valor * (porcentagem / 100.0) + valor;
                    double valorParcela = valorParcelado / parcela;

                    String resultadoFormatadoParcela = decimalFormat.format(valorParcela);
                    String resultadoFormatadoTotal = decimalFormat.format(valorParcelado);

                    tableParcelas.setValueAt(parcela + "X R$ " + resultadoFormatadoParcela, i, 0);
                    tableParcelas.setValueAt("R$ " + resultadoFormatadoTotal, i, 1);
                }
            } catch (NumberFormatException e) {
                e.printStackTrace();
            }

        } else if (BThiper.isSelected() || BTelo.isSelected()) {
            String valorString = precoParcelas.getText().replace(",", ".").replaceAll(" ", "");
            try {
                double valor = Double.parseDouble(valorString);
                DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");

                for (int i = 0; i < 18; i++) {
                    int parcela = i + 1;
                    double porcentagem = 0.0;

                    if (parcela == 1) {
                        porcentagem = 3.92;
                    } else if (parcela == 2) {
                        porcentagem = 5.32;
                    } else if (parcela == 3) {
                        porcentagem = 6.08;
                    } else if (parcela == 4) {
                        porcentagem = 6.83;
                    } else if (parcela == 5) {
                        porcentagem = 7.58;
                    } else if (parcela == 6) {
                        porcentagem = 8.31;
                    } else if (parcela == 7) {
                        porcentagem = 8.24;
                    } else if (parcela == 8) {
                        porcentagem = 8.96;
                    } else if (parcela == 9) {
                        porcentagem = 9.68;
                    } else if (parcela == 10) {
                        porcentagem = 10.39;
                    } else if (parcela == 11) {
                        porcentagem = 11.09;
                    } else if (parcela == 12) {
                        porcentagem = 11.78;
                    } else if (parcela == 13) {
                        porcentagem = 13.26;
                    } else if (parcela == 14) {
                        porcentagem = 13.94;
                    } else if (parcela == 15) {
                        porcentagem = 14.61;
                    } else if (parcela == 16) {
                        porcentagem = 15.28;
                    } else if (parcela == 17) {
                        porcentagem = 15.94;
                    } else if (parcela == 18) {
                        porcentagem = 16.59;
                    }

                    double valorParcelado = valor * (porcentagem / 100.0) + valor;
                    double valorParcela = valorParcelado / parcela;

                    String resultadoFormatadoParcela = decimalFormat.format(valorParcela);
                    String resultadoFormatadoTotal = decimalFormat.format(valorParcelado);

                    tableParcelas.setValueAt(parcela + "X R$ " + resultadoFormatadoParcela, i, 0);
                    tableParcelas.setValueAt("R$ " + resultadoFormatadoTotal, i, 1);
                }
                
                
            } catch (NumberFormatException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_precoParcelasKeyReleased

    private void BThiperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BThiperActionPerformed
        // TODO add your handling code here:
        String valorString = precoParcelas.getText().replace(",", ".").replaceAll(" ", "");
        try {
            double valor = Double.parseDouble(valorString);
            DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");

            for (int i = 0; i < 18; i++) {
                int parcela = i + 1;
                double porcentagem = 0.0;

                if (parcela == 1) {
                    porcentagem = 3.92;
                } else if (parcela == 2) {
                    porcentagem = 5.32;
                } else if (parcela == 3) {
                    porcentagem = 6.08;
                } else if (parcela == 4) {
                    porcentagem = 6.83;
                } else if (parcela == 5) {
                    porcentagem = 7.58;
                } else if (parcela == 6) {
                    porcentagem = 8.31;
                } else if (parcela == 7) {
                    porcentagem = 8.24;
                } else if (parcela == 8) {
                    porcentagem = 8.96;
                } else if (parcela == 9) {
                    porcentagem = 9.68;
                } else if (parcela == 10) {
                    porcentagem = 10.39;
                } else if (parcela == 11) {
                    porcentagem = 11.09;
                } else if (parcela == 12) {
                    porcentagem = 11.78;
                } else if (parcela == 13) {
                    porcentagem = 13.26;
                } else if (parcela == 14) {
                    porcentagem = 13.94;
                } else if (parcela == 15) {
                    porcentagem = 14.61;
                } else if (parcela == 16) {
                    porcentagem = 15.28;
                } else if (parcela == 17) {
                    porcentagem = 15.94;
                } else if (parcela == 18) {
                    porcentagem = 16.59;
                }

                double valorParcelado = valor * (porcentagem / 100.0) + valor;
                double valorParcela = valorParcelado / parcela;

                String resultadoFormatadoParcela = decimalFormat.format(valorParcela);
                String resultadoFormatadoTotal = decimalFormat.format(valorParcelado);

                tableParcelas.setValueAt(parcela + "X R$ " + resultadoFormatadoParcela, i, 0);
                tableParcelas.setValueAt("R$ " + resultadoFormatadoTotal, i, 1);
            }
        } catch (NumberFormatException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_BThiperActionPerformed

    private void BTeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTeloActionPerformed
        // TODO add your handling code here:
        String valorString = precoParcelas.getText().replace(",", ".").replaceAll(" ", "");
        try {
            double valor = Double.parseDouble(valorString);
            DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");

            for (int i = 0; i < 18; i++) {
                int parcela = i + 1;
                double porcentagem = 0.0;

                if (parcela == 1) {
                    porcentagem = 3.92;
                } else if (parcela == 2) {
                    porcentagem = 5.32;
                } else if (parcela == 3) {
                    porcentagem = 6.08;
                } else if (parcela == 4) {
                    porcentagem = 6.83;
                } else if (parcela == 5) {
                    porcentagem = 7.58;
                } else if (parcela == 6) {
                    porcentagem = 8.31;
                } else if (parcela == 7) {
                    porcentagem = 8.24;
                } else if (parcela == 8) {
                    porcentagem = 8.96;
                } else if (parcela == 9) {
                    porcentagem = 9.68;
                } else if (parcela == 10) {
                    porcentagem = 10.39;
                } else if (parcela == 11) {
                    porcentagem = 11.09;
                } else if (parcela == 12) {
                    porcentagem = 11.78;
                } else if (parcela == 13) {
                    porcentagem = 13.26;
                } else if (parcela == 14) {
                    porcentagem = 13.94;
                } else if (parcela == 15) {
                    porcentagem = 14.61;
                } else if (parcela == 16) {
                    porcentagem = 15.28;
                } else if (parcela == 17) {
                    porcentagem = 15.94;
                } else if (parcela == 18) {
                    porcentagem = 16.59;
                }

                double valorParcelado = valor * (porcentagem / 100.0) + valor;
                double valorParcela = valorParcelado / parcela;

                String resultadoFormatadoParcela = decimalFormat.format(valorParcela);
                String resultadoFormatadoTotal = decimalFormat.format(valorParcelado);

                tableParcelas.setValueAt(parcela + "X R$ " + resultadoFormatadoParcela, i, 0);
                tableParcelas.setValueAt("R$ " + resultadoFormatadoTotal, i, 1);
            }
        } catch (NumberFormatException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_BTeloActionPerformed

    private void BTmasterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTmasterActionPerformed
        // TODO add your handling code here:
        String valorString = precoParcelas.getText().replace(",", ".").replaceAll(" ", "");
        try {
            double valor = Double.parseDouble(valorString);
            DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");

            for (int i = 0; i < 18; i++) {
                int parcela = i + 1;
                double porcentagem = 0.0;

                if (parcela == 1) {
                    porcentagem = 2.99;
                } else if (parcela == 2) {
                    porcentagem = 4.52;
                } else if (parcela == 3) {
                    porcentagem = 5.37;
                } else if (parcela == 4) {
                    porcentagem = 6.22;
                } else if (parcela == 5) {
                    porcentagem = 7.06;
                } else if (parcela == 6) {
                    porcentagem = 7.92;
                } else if (parcela == 7) {
                    porcentagem = 8.24;
                } else if (parcela == 8) {
                    porcentagem = 8.96;
                } else if (parcela == 9) {
                    porcentagem = 9.68;
                } else if (parcela == 10) {
                    porcentagem = 10.39;
                } else if (parcela == 11) {
                    porcentagem = 11.09;
                } else if (parcela == 12) {
                    porcentagem = 11.78;
                } else if (parcela == 13) {
                    porcentagem = 13.26;
                } else if (parcela == 14) {
                    porcentagem = 13.94;
                } else if (parcela == 15) {
                    porcentagem = 14.61;
                } else if (parcela == 16) {
                    porcentagem = 15.28;
                } else if (parcela == 17) {
                    porcentagem = 15.94;
                } else if (parcela == 18) {
                    porcentagem = 16.59;
                }

                double valorParcelado = valor * (porcentagem / 100.0) + valor;
                double valorParcela = valorParcelado / parcela;

                String resultadoFormatadoParcela = decimalFormat.format(valorParcela);
                String resultadoFormatadoTotal = decimalFormat.format(valorParcelado);

                tableParcelas.setValueAt(parcela + "X R$ " + resultadoFormatadoParcela, i, 0);
                tableParcelas.setValueAt("R$ " + resultadoFormatadoTotal, i, 1);
            }
        } catch (NumberFormatException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_BTmasterActionPerformed

    private void BTvisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTvisaActionPerformed
        // TODO add your handling code here:
        String valorString = precoParcelas.getText().replace(",", ".").replaceAll(" ", "");
        try {
            double valor = Double.parseDouble(valorString);
            DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");

            for (int i = 0; i < 18; i++) {
                int parcela = i + 1;
                double porcentagem = 0.0;

                if (parcela == 1) {
                    porcentagem = 2.99;
                } else if (parcela == 2) {
                    porcentagem = 4.52;
                } else if (parcela == 3) {
                    porcentagem = 5.37;
                } else if (parcela == 4) {
                    porcentagem = 6.22;
                } else if (parcela == 5) {
                    porcentagem = 7.06;
                } else if (parcela == 6) {
                    porcentagem = 7.92;
                } else if (parcela == 7) {
                    porcentagem = 8.24;
                } else if (parcela == 8) {
                    porcentagem = 8.96;
                } else if (parcela == 9) {
                    porcentagem = 9.68;
                } else if (parcela == 10) {
                    porcentagem = 10.39;
                } else if (parcela == 11) {
                    porcentagem = 11.09;
                } else if (parcela == 12) {
                    porcentagem = 11.78;
                } else if (parcela == 13) {
                    porcentagem = 13.26;
                } else if (parcela == 14) {
                    porcentagem = 13.94;
                } else if (parcela == 15) {
                    porcentagem = 14.61;
                } else if (parcela == 16) {
                    porcentagem = 15.28;
                } else if (parcela == 17) {
                    porcentagem = 15.94;
                } else if (parcela == 18) {
                    porcentagem = 16.59;
                }

                double valorParcelado = valor * (porcentagem / 100.0) + valor;
                double valorParcela = valorParcelado / parcela;

                String resultadoFormatadoParcela = decimalFormat.format(valorParcela);
                String resultadoFormatadoTotal = decimalFormat.format(valorParcelado);

                tableParcelas.setValueAt(parcela + "X R$ " + resultadoFormatadoParcela, i, 0);
                tableParcelas.setValueAt("R$ " + resultadoFormatadoTotal, i, 1);
            }
        } catch (NumberFormatException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_BTvisaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Parcelas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Parcelas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Parcelas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Parcelas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Parcelas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton BTelo;
    private javax.swing.JToggleButton BThiper;
    private javax.swing.JToggleButton BTmaster;
    private javax.swing.JToggleButton BTvisa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private loginAnimation.textformated precoParcelas;
    public static javax.swing.JTable tableParcelas;
    // End of variables declaration//GEN-END:variables
}
